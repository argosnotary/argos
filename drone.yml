---
kind: pipeline
name: argos-release
type: docker

steps:
  - name: check license
    image: argosnotary/argos-build:3.6.3
    commands:
    - mvn license:check
 
  - name: build integrated snapshot image
    image: plugins/docker
    settings:
      context: docker
      dockerfile: docker/Dockerfile
      repo: argosnotary/argos-snapshot
      tags: ${DRONE_TAG:-${DRONE_BRANCH//\//_}}
      build_args:
        - ARGOS_FRONTEND_VERSION=0.0.1-RC8
        - ARGOS_SERVICE_VERSION=0.0.1-RC8
      username:
        from_secret: docker_login_user
      password:
        from_secret: docker_login_token
    when:
      event:
      - push
    depends_on:
    - check license

  - name: argossnaphot
    image: argosnotary/argos-snapshot:${DRONE_TAG:-${DRONE_BRANCH//\//_}}
    pull: always
    detach: true
    when:
      event:
      - push
    depends_on:
    - build integrated snapshot image
  
  - name: test snapshot image
    image: curlimages/curl
    pull: always
    commands:
    - curl --retry-connrefused --retry 10 --retry-delay 0 -u admin:admin "http://argossnaphot"
    - curl --retry-connrefused --retry 10 --retry-delay 0 -u admin:admin "http://argossnaphot:8080/actuator/health"
    - curl --retry-connrefused --retry 10 --retry-delay 0 -u admin:admin "http://argossnaphot:8087/oauth2/v2.0/authorize-manual"
    depends_on:
    - build integrated snapshot image
    when:
      event:
        - push
        
  - name: build and release integrated image
    image: plugins/docker
    settings:
      context: docker
      dockerfile: docker/Dockerfile
      repo: argosnotary/argos
      tags:
      - ${DRONE_TAG:-${DRONE_BRANCH//\//_}}
      - latest
      build_args:
        - ARGOS_FRONTEND_VERSION=0.0.1-RC8
        - ARGOS_SERVICE_VERSION=0.0.1-RC8
      username:
        from_secret: docker_login_user
      password:
        from_secret: docker_login_token
    depends_on:
    - check license
    when:
      event:
      - tag
    
  - name: argos
    image: argosnotary/argos:${DRONE_TAG:-${DRONE_BRANCH//\//_}}
    pull: always
    detach: true
    when:
      event:
        - tag
    depends_on:
    - build and release integrated image
  
  - name: test image
    image: curlimages/curl
    pull: always
    commands:
    - curl --retry-connrefused --retry 10 --retry-delay 0 -u admin:admin "http://argos"
    - curl --retry-connrefused --retry 10 --retry-delay 0 -u admin:admin "http://argos:8080/actuator/health"
    - curl --retry-connrefused --retry 10 --retry-delay 0 -u admin:admin "http://argos:8087/oauth2/v2.0/authorize-manual"
    depends_on:
    - build and release integrated image
    when:
      event:
        - tag
      
trigger:
  event:
    - push
    - tag

